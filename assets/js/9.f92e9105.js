(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{358:function(t,s,a){"use strict";a.r(s);var n=a(23),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("本章将会介绍 Groovy 的程序结构")]),t._v(" "),a("h2",{attrs:{id:"_1-包名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-包名"}},[t._v("#")]),t._v(" 1. 包名")]),t._v(" "),a("p",[t._v("包名的作用与 Java 中的作用完全相同。它们使我们能够在没有任何冲突的情况下分离代码库。Groovy 类必须在类定义之前指定它们的包，否则就采用默认的包。")]),t._v(" "),a("p",[t._v("定义包名和 Java 中非常相似：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个名为 com.yoursite 的包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yoursite\n")])])]),a("p",[t._v("要引用"),a("code",[t._v("com.yoursite.com")]),t._v("包中的某个类"),a("code",[t._v("Foo")]),t._v("，你需要使用完全限定的名称"),a("code",[t._v("com.yoursite.com.Foo")]),t._v("，或者你可以使用导入语句，我们将在下面看到。")]),t._v(" "),a("h2",{attrs:{id:"_2-导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-导入"}},[t._v("#")]),t._v(" 2. 导入")]),t._v(" "),a("p",[t._v("为了引用任何一个类，你需要对它的包进行限定引用。Groovy 遵循 Java 的概念，允许使用导入语句来解析类引用。")]),t._v(" "),a("p",[t._v("例如，Groovy 提供了几个构建类，比如"),a("code",[t._v("MarkupBuilder")]),t._v("。"),a("code",[t._v("MarkupBuilder")]),t._v("在包"),a("code",[t._v("groovy.xml")]),t._v("里面，所以为了使用这个类，你需要导入它，如下所示：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入 MarkupBuilder 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MarkupBuilder\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用导入的类创建一个对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" xml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" xml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n")])])]),a("h3",{attrs:{id:"_2-1-默认导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-默认导入"}},[t._v("#")]),t._v(" 2.1 默认导入")]),t._v(" "),a("p",[t._v("默认导入是指Groovy语言默认提供的导入。例如下面的代码：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("同样的代码在 Java 中需要向"),a("code",[t._v("Date")]),t._v("类导入语句，比如：import java.util.Date。Groovy 默认会帮你导入这些类。")]),t._v(" "),a("p",[t._v("以下是由 groovy 为你默认导入的包：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigInteger\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigDecimal\n")])])]),a("p",[t._v("这样做是因为这些包中的类是最常用的。通过默认导入这些包去减少重复的代码。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-简单导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-简单导入"}},[t._v("#")]),t._v(" 2.2 简单导入")]),t._v(" "),a("p",[t._v("简单导入是指在导入语句中，将类名与包名一起完整定义。例如下面代码中的导入语句 import groovy.xml.MarkupBuilder 就是一个简单的导入，它直接引用一个包内的类。")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入 MarkupBuilder 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MarkupBuilder\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用导入的类创建一个对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" xml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" xml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n")])])]),a("h3",{attrs:{id:"_2-3-星号导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-星号导入"}},[t._v("#")]),t._v(" 2.3 星号导入")]),t._v(" "),a("p",[t._v("Groovy和Java一样，提供了一种特殊的方式来使用"),a("code",[t._v("*")]),t._v("从一个包中导入所有的类，即所谓的星号导入。"),a("code",[t._v("MarkupBuilder")]),t._v("是一个类，它在包"),a("code",[t._v("groovy.xml")]),t._v("中，与另一个类"),a("code",[t._v("StreamingMarkupBuilder")]),t._v("一起。如果你需要使用这两个类，你可以这样做：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MarkupBuilder\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamingMarkupBuilder\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" markupBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" markupBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamingMarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n")])])]),a("p",[t._v("这是完全有效的代码。但是通过"),a("code",[t._v("*")]),t._v("的导入，我们只需要一行就可以达到同样的效果。star导入了"),a("code",[t._v("groovy.xml")]),t._v("包下的所有类：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" markupBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" markupBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamingMarkupBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n")])])]),a("p",[t._v("星号导入的一个问题是，它们会使你的本地命名空间混乱。但如果使用 Groovy 提供的别名，这个问题就可以轻松解决。")]),t._v(" "),a("h3",{attrs:{id:"_2-4-静态导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-静态导入"}},[t._v("#")]),t._v(" 2.4 静态导入")]),t._v(" "),a("p",[t._v("Groovy 的静态导入功能允许你引用导入的类，就像在自己的类中引用静态方法一样：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FALSE\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("FALSE "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//use directly, without Boolean prefix!")]),t._v("\n")])])]),a("p",[t._v("这类似于 Java 的静态导入功能，但比 Java 更动态，只要你的类型不同，就可以定义与导入方法同名的方法：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("format "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Integer i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 2")]),t._v("\n        i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'String'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'String'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 3")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("注释 1：静态导入方法")])]),t._v(" "),a("li",[a("p",[t._v("注释 2：声明方法的名称与上面静态导入的方法相同，但参数类型不同。")])]),t._v(" "),a("li",[a("p",[t._v("注释 3：在 Java 中会编译错误，但在 Groovy 中是正确的")]),t._v(" "),a("p",[t._v("如果类型相同，导入的类优先级更高。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-5-静态导入别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-静态导入别名"}},[t._v("#")]),t._v(" 2.5 静态导入别名")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("as")]),t._v("关键字的静态导入为命名空间问题提供了一个优雅的解决方案。假设你想获得一个"),a("code",[t._v("Calendar")]),t._v("实例，使用它的"),a("code",[t._v("getInstance()")]),t._v("方法，这是一个静态方法，所以我们可以使用静态导入。当与它的类名分开时，会产生歧义，我们可以使用别名导入，而不是每次都调用"),a("code",[t._v("getInstance()")]),t._v("，这样可以增加代码的可读性：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" Calendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getInstance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" now\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Calendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n")])])]),a("p",[t._v("现在它清爽多了！")]),t._v(" "),a("h3",{attrs:{id:"_2-6-静态星号导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-静态星号导入"}},[t._v("#")]),t._v(" 2.6 静态星号导入")]),t._v(" "),a("p",[t._v("静态星号导入与常规星号导入非常相似。它将导入给定类的所有静态方法。")]),t._v(" "),a("p",[t._v("例如，假设我们需要为我们的应用程序计算正弦和余弦。"),a("code",[t._v("java.lang.Math")]),t._v("类中有名为"),a("code",[t._v("sin")]),t._v("和"),a("code",[t._v("cos")]),t._v("的静态方法，它们符合我们的需求。在静态星号导入的帮助下，我们可以这样做：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n")])])]),a("p",[t._v("如你所见，我们能够直接访问方法"),a("code",[t._v("sin")]),t._v("和"),a("code",[t._v("cos")]),t._v("，而无需"),a("code",[t._v("Math.")]),t._v("前缀。")]),t._v(" "),a("h3",{attrs:{id:"_2-7-别名导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-别名导入"}},[t._v("#")]),t._v(" 2.7 别名导入")]),t._v(" "),a("p",[t._v("通过类型别名，我们可以使用我们选择的名称来引用一个完全限定的类名。这可以通过"),a("code",[t._v("as")]),t._v("关键字来实现，就像前面一样。")]),t._v(" "),a("p",[t._v("例如，我们可以将"),a("code",[t._v("java.sql.Date")]),t._v("导入为"),a("code",[t._v("SQLDate")]),t._v("，并将其与"),a("code",[t._v("java.util.Date")]),t._v("在同一个文件中使用，而不必使用任何一个类的完全限定名。")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" SQLDate\n\nDate utilDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nSQLDate sqlDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" utilDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" sqlDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-脚本与类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-脚本与类"}},[t._v("#")]),t._v(" 3. 脚本与类")]),t._v(" "),a("h3",{attrs:{id:"_3-1-public-static-void-main-与-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-public-static-void-main-与-script"}},[t._v("#")]),t._v(" 3.1 public static void main 与 script")]),t._v(" "),a("p",[t._v("Groovy 同时支持脚本和类。以下面的代码为例：")]),t._v(" "),a("p",[t._v("Main.groovy")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 2")]),t._v("\n        println "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Groovy world!'")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("注释 1：定义一个"),a("code",[t._v("Main")]),t._v("类，名称是任意的。")]),t._v(" "),a("li",[t._v("注释 2："),a("code",[t._v("public static void main(String[])")]),t._v("方法可以作为类的主方法使用")]),t._v(" "),a("li",[t._v("注释 3：main 的方法体")])]),t._v(" "),a("p",[t._v("这是典型的来自 Java 的代码，代码必须嵌入到一个类中才能执行。Groovy 让它变得更简单，下面的代码含义与上面相同：")]),t._v(" "),a("p",[t._v("Main.groovy")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("println "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Groovy world!'")]),t._v("\n")])])]),a("p",[t._v("脚本可以看作是一个类，而不需要声明它，这是脚本与类的一部分区别。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-脚本类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-脚本类"}},[t._v("#")]),t._v(" 3.2 脚本类")]),t._v(" "),a("p",[t._v("脚本总是被编译成一个类。Groovy 编译器将为你编译这个类，并将脚本的主体复制到一个运行方法中。因此，前面的例子被编译成了下面的样子：")]),t._v(" "),a("p",[t._v("Main.groovy")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codehaus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvokerHelper\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 2")]),t._v("\n        println "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Groovy world!'")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 4")]),t._v("\n        InvokerHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runScript")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("注释 1："),a("code",[t._v("Main")]),t._v("类继承自"),a("code",[t._v("groovy.lang.Script")]),t._v("类")]),t._v(" "),a("li",[t._v("注释 2："),a("code",[t._v("groovy.lang.Script")]),t._v("需要一个有返回值的"),a("code",[t._v("run")]),t._v("方法。")]),t._v(" "),a("li",[t._v("注释 3：脚本主体在"),a("code",[t._v("run")]),t._v("方法内")]),t._v(" "),a("li",[t._v("注释 4："),a("code",[t._v("main")]),t._v("方法会自动生成")]),t._v(" "),a("li",[t._v("注释 5：委托"),a("code",[t._v("run")]),t._v("方法执行脚本。")])]),t._v(" "),a("p",[t._v("如果脚本在一个文件中，那么文件的基本名称将被用来确定生成的脚本类的名称。在这个例子中，如果文件的名字是"),a("code",[t._v("Main.groovy")]),t._v("，那么脚本类将是"),a("code",[t._v("Main")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-方法"}},[t._v("#")]),t._v(" 3.3 方法")]),t._v(" "),a("p",[t._v("可以在脚本中定义方法，如图所示：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fib")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fib")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fib")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fib")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v("\n")])])]),a("p",[t._v("你也可以将方法和代码混合在一起。生成的脚本类会将所有方法带入脚本类，并将所有脚本体组装到运行方法中：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("println "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("                                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("power")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 2")]),t._v("\n\nprintln "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"2^6=='),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("power")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 3")]),t._v("\n")])])]),a("ul",[a("li",[t._v("注释 1：脚本开始")]),t._v(" "),a("li",[t._v("注释 2：一个方法定义在脚本主体重")]),t._v(" "),a("li",[t._v("注释 3：脚本继续")])]),t._v(" "),a("p",[t._v("此代码在内部转换为：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codehaus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groovy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvokerHelper\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("power")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        println "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 2")]),t._v("\n        println "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"2^6=='),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("power")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释 3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        InvokerHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runScript")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("注释 1："),a("code",[t._v("power")]),t._v("方法被原样复制到生成的脚本类中")]),t._v(" "),a("li",[t._v("注释 2：第一条语句被复制到运行方法中")]),t._v(" "),a("li",[t._v("注释 3：第二条语句被复制到运行方法中")])]),t._v(" "),a("p",[t._v("即使 Groovy 从你的脚本中创建一个类，对用户来说也是完全透明的。特别是，脚本会被编译成字节码，并且保留了行号。这意味着，如果在脚本中抛出异常，堆栈跟踪将显示对应于原始脚本的行号，而不是我们显示的生成代码。")]),t._v(" "),a("h3",{attrs:{id:"_3-4-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-变量"}},[t._v("#")]),t._v(" 3.4 变量")]),t._v(" "),a("p",[t._v("脚本中的变量不需要类型定义。这意味着这个脚本：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("p",[t._v("将表现为：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("p",[t._v("然而两者在语义上是有区别的：")]),t._v(" "),a("ul",[a("li",[t._v("如果变量的声明和第一个例子一样，那么它就是一个局部变量。它将在编译器生成的"),a("code",[t._v("run")]),t._v("方法中声明，在脚本主体之外将不可见。特别要注意：这样的变量在脚本的其他方法中是不可见的。")]),t._v(" "),a("li",[t._v("如果变量未声明，它就会进入脚本绑定中。绑定在方法中是可见的，如果你使用脚本与应用程序交互，并且需要在脚本和应用程序之间共享数据，那么绑定就显得尤为重要。读者可以参考集成指南了解更多信息。")])]),t._v(" "),a("p",[t._v("如果你想让一个变量在不进入"),a("code",[t._v("Binding")]),t._v("的情况下成为类的一个字段，你可以使用"),a("code",[t._v("@Field")]),t._v("注解。")])])}),[],!1,null,null,null);s.default=r.exports}}]);